#!/bin/bash -e

while getopts ":v:t:z:r:m:w:h" arg
do
  case "$arg" in
    v)
      kafka_version=$OPTARG #1.1.0
    ;;
    t)
      topic=$OPTARG       # 'admin'
    ;;
    z)
      zookeeper_url=$OPTARG   # 'http://chs-alphakey-pp.internal.ch'
    ;;
    r)
      retention=$OPTARG    # 'true'
    ;;
    w)
      wait=$OPTARG    # 'true'
    ;;
    h)
      echo ""
      echo "Kafka bleed Script"
      echo ""
      echo " * Empties kafka topics of message"
      echo ""
      echo "Options are:"
      echo ""
      echo "      OPTION    ENV-VAR        DESCRIPTION                                                           EXAMPLE ('' does NOT indicate default value)"
      echo "        -v      kafka_version  The kafka version you are running, this flag must be set              0.10.0 or 1.1.0"
      echo "        -t      topic          A kafka topic you want emptied.                                       import-observations-extracted"
      echo "        -z      zookeeper_url  The zookeeper url, defaults to                                        localhost:2181"
      echo "        -r      retention      The new retention of topic in secs, defaults to                       86400000"
      echo "        -w      wait           The time to wait between changing the retention in secs, defaults to  60"
      echo ""
      exit 0
    ;;
    \?)
      echo "ERROR: Unknown option $OPTARG"
    ;;
  esac
done
echo ""
# Check kafka version is set
if [ -z $kafka_version ]; then
    echo "Missing kafka version"
    exit 1
fi
kv=$kafka_version
echo "kafka version: $kv"
echo ""
if [ -z $zookeeper_url ]; then
    # Set default zookeeper_url
    zookeeper_url="localhost:2181"
fi
echo ""
echo "zookeeper url is set to: $zookeeper_url"
echo ""
if [ -n "$topic" ]; then
    echo "topics: $topic"
    topiclist=($topic)
    echo ""
elif [ -z "$topic" ]; then
    topiclist=`eval "/usr/local/Cellar/kafka/1.1.0/bin/kafka-topics --zookeeper $zookeeper_url --list"`
fi
topics=($(echo $topiclist | tr ',' "\n"))
echo "The following kafka topics are going to be bled:"
echo ""
for i in "${topics[@]}"
do
    :
    echo "$i"
done

echo ""
# Set default retention
if [  -z "$retention" ]; then
    retention=86400000
fi
echo "retention is set to: $retention"


echo ""
# Set default retention
if [  -z "$wait" ]; then
    wait=60
fi
echo "wait between changing retention times is: $wait"

echo "-----------------------------------"
echo "STEP 1: Lower retention of kafka topics"
echo ""
if [[ $kv == 0.* ]]; then
    decrease_retention="/usr/local/Cellar/kafka/$kv/bin/kafka-topics --zookeeper $zookeeper_url --alter --config retention.ms=1000 --topic"
    increase_retention="/usr/local/Cellar/kafka/$kv/bin/kafka-topics --zookeeper $zookeeper_url --alter --config retention.ms=$retention --topic"
elif [[ $kv == 1.* ]]; then
    decrease_retention="/usr/local/Cellar/kafka/$kv/bin/kafka-configs --zookeeper localhost:2181 --entity-type topics --alter -add-config retention.ms=1000 --entity-name"
    increase_retention="/usr/local/Cellar/kafka/$kv/bin/kafka-configs --zookeeper localhost:2181 --entity-type topics --alter -add-config retention.ms=$retention --entity-name"
fi
for i in "${topics[@]}"
do
    :
    bleed_topic="$decrease_retention $i"
    echo $bleed_topic
    eval $bleed_topic
    echo "bleeding topic: $i"
done

echo "-----------------------------------"
echo "STEP 2: Sleep for $wait seconds whilst topics bleed"
sleep $wait
echo "successfully bled topics"
echo ""

echo "-----------------------------------"
echo "STEP 3: Raise retention of kafka topics to $retention"
echo ""
for i in "${topics[@]}"
do
    :
    conf_topic="$increase_retention $i"
    echo $conf_topic
    eval $conf_topic
    echo "configured retention of topic: $i"
done
echo "-----------------------------------"
echo ""
echo "Cleared out kafka topics"
